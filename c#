using System;
using System.Windows.Forms;
using System.Net.NetworkInformation;
using System.Net;
using System.IO;
using System.Net.Sockets;

namespace Comping
{
    public partial class Form1 : Form




    {
        //建立 Ping 物件
        System.Net.NetworkInformation.Ping oPing = new System.Net.NetworkInformation.Ping();
        private object displayText;



        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void button1_Click(object sender, EventArgs e)
        {

        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {


        }
        //【大力按我】本機外網測試按鈕
        private void button1_Click_1(object sender, EventArgs e)

        {

            //設定要測試連線的 IP 與 連線逾時。

            System.Net.NetworkInformation.PingReply oPingReply = oPing.Send("8.8.8.8", 5000);

            //判斷是否連線。
            if (oPingReply.Status == System.Net.NetworkInformation.IPStatus.Success)
            {
                MessageBox.Show("網路連線正常!");
            }
            else if(oPingReply.Status != System.Net.NetworkInformation.IPStatus.Success)

            {
                MessageBox.Show("網路連線異常!");
            }
        }
        //持續連線測試按鈕
        private void button2_Click(object sender, EventArgs e)


        {
            System.Diagnostics.Process.Start(@"ping.exe", "8.8.8.8 -t");
            Ping pi = new Ping();
            var pp = pi.Send("8.8.8.8");
            if (pp.Status == IPStatus.Success)
            {
                //creat text
                string path = @"D:\\cmdpinglog.txt";
                if (!File.Exists(path))
                {
                    // Create a file to write to.
                    using (StreamWriter sw = File.CreateText(path))
                    {
                        for (int i = 1; i <= 1000; i++)
                        {
                            sw.WriteLine($"From{pp.Address}Byte = {pp.Buffer.Length}" +
                                             $"Time={pp.RoundtripTime}ms TTL={pp.Options.Ttl}");
                        }
                        sw.Close();
                    }
                }

            }
            
        }
        //顯示結果
        private void textBox1_TextChanged_1(object sender, EventArgs e)
        {
            
            
        }

        private void label1_Click_1(object sender, EventArgs e)
        {


        }

        private void button3_Click(object sender, EventArgs e)
        {
            
            IPAddress[] localIP = Dns.GetHostAddresses(Dns.GetHostName());
            foreach (IPAddress address in localIP) {

                if (address.AddressFamily == AddressFamily.InterNetwork)
                    textBox1.Text = address.ToString();
            }


        }
    }
}
